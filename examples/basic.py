"""–ë–∞–∑–æ–≤—ã–π –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è FastCacheMiddleware —Å —Ä–µ–∑–æ–ª—é—Ü–∏–µ–π —Ä–æ—É—Ç–æ–≤.

–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç:
1. –ê–Ω–∞–ª–∏–∑ —Ä–æ—É—Ç–æ–≤ –Ω–∞ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
2. –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–µ—à –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π –∏–∑ dependencies
3. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ GET –∑–∞–ø—Ä–æ—Å–æ–≤
4. –ò–Ω–≤–∞–ª–∏–¥–∞—Ü–∏—è –∫–µ—à–∞ –ø—Ä–∏ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É—é—â–∏—Ö –∑–∞–ø—Ä–æ—Å–∞—Ö
"""

from fastapi import FastAPI, Depends
from fast_cache_middleware import FastCacheMiddleware, CacheConfig, CacheDropConfig
import time
import uvicorn


# –°–æ–∑–¥–∞–µ–º FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = FastAPI(title="FastCacheMiddleware Basic Example")

# –î–æ–±–∞–≤–ª—è–µ–º middleware - –æ–Ω –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ä–æ—É—Ç—ã –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—Ä–æ—Å–µ
app.add_middleware(FastCacheMiddleware)


# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–µ—à –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
def short_cache() -> CacheConfig:
    """–ö–æ—Ä–æ—Ç–∫–æ–µ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ - 30 —Å–µ–∫—É–Ω–¥."""
    return CacheConfig(max_age=30)


def long_cache() -> CacheConfig:
    """–î–ª–∏–Ω–Ω–æ–µ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ - 5 –º–∏–Ω—É—Ç."""
    return CacheConfig(max_age=300)


def custom_key_cache() -> CacheConfig:
    """–ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –∫–∞—Å—Ç–æ–º–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π –∫–ª—é—á–∞."""

    def custom_key_func(request):
        # –ö–ª—é—á –≤–∫–ª—é—á–∞–µ—Ç user-id –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –µ—Å–ª–∏ –µ—Å—Ç—å
        user_id = request.headers.get("user-id", "anonymous")
        return f"{request.url.path}:user:{user_id}"

    return CacheConfig(max_age=60, key_func=custom_key_func)


def invalidate_users_cache() -> CacheDropConfig:
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –∏–Ω–≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∫–µ—à–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."""
    return CacheDropConfig(paths=["/users/*", "/user/*"])


# –†–æ—É—Ç—ã —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è–º–∏ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è


@app.get("/")
async def root():
    """–ö–æ—Ä–Ω–µ–≤–æ–π —Ä–æ—É—Ç –±–µ–∑ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è."""
    return {"message": "FastCacheMiddleware Basic Example", "timestamp": time.time()}


@app.get("/fast", dependencies=[CacheConfig(max_age=30)])
async def fast_endpoint():
    """–ë—ã—Å—Ç—Ä—ã–π endpoint —Å –∫–æ—Ä–æ—Ç–∫–∏–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º (30 —Å–µ–∫—É–Ω–¥).

    Middleware –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç dependencies –∏ –Ω–∞—Ö–æ–¥–∏—Ç CacheConfig.
    –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—Ä–æ—Å–µ –æ—Ç–≤–µ—Ç –∫–µ—à–∏—Ä—É–µ—Ç—Å—è –Ω–∞ 30 —Å–µ–∫—É–Ω–¥.
    """
    return {
        "message": "Fast cached response",
        "timestamp": time.time(),
        "cache_duration": "30 seconds",
    }


@app.get("/slow", dependencies=[CacheConfig(max_age=300)])
async def slow_endpoint():
    """–ú–µ–¥–ª–µ–Ω–Ω—ã–π endpoint —Å –¥–ª–∏–Ω–Ω—ã–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º (5 –º–∏–Ω—É—Ç)."""
    # –ò–º–∏—Ç–∏—Ä—É–µ–º –º–µ–¥–ª–µ–Ω–Ω–æ–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ
    import asyncio

    await asyncio.sleep(0.5)

    return {
        "message": "Slow cached response",
        "timestamp": time.time(),
        "cache_duration": "5 minutes",
        "computed": True,
    }


@app.get(
    "/users/{user_id}",
    dependencies=[CacheConfig(max_age=60, key_func=custom_key_cache)],
)
async def get_user(user_id: int):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º –∫–ª—é—á–æ–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è.

    –ö–ª—é—á –∫–µ—à–∞ –≤–∫–ª—é—á–∞–µ—Ç user-id –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏.
    """
    # –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    import asyncio

    await asyncio.sleep(0.2)

    return {
        "user_id": user_id,
        "name": f"User {user_id}",
        "email": f"user{user_id}@example.com",
        "timestamp": time.time(),
    }


@app.get("/data/{item_id}", dependencies=[CacheConfig(max_age=300)])
async def get_data(item_id: str):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å –¥–ª–∏–Ω–Ω—ã–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º."""
    return {
        "item_id": item_id,
        "data": f"Some data for {item_id}",
        "timestamp": time.time(),
    }


# –†–æ—É—Ç—ã –¥–ª—è –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å –∏–Ω–≤–∞–ª–∏–¥–∞—Ü–∏–µ–π –∫–µ—à–∞


@app.post(
    "/users/{user_id}", dependencies=[CacheDropConfig(paths=["/users/*", "/user/*"])]
)
async def update_user(user_id: int, user_data: dict):
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∏–Ω–≤–∞–ª–∏–¥–∞—Ü–∏–µ–π –∫–µ—à–∞.

    –≠—Ç–æ—Ç POST –∑–∞–ø—Ä–æ—Å –∏–Ω–≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç –∫–µ—à –¥–ª—è –≤—Å–µ—Ö /users/* –ø—É—Ç–µ–π.
    """
    return {
        "user_id": user_id,
        "message": "User updated",
        "cache_invalidated": True,
        "timestamp": time.time(),
    }


@app.delete(
    "/users/{user_id}", dependencies=[CacheDropConfig(paths=["/users/*", "/user/*"])]
)
async def delete_user(user_id: int):
    """–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∏–Ω–≤–∞–ª–∏–¥–∞—Ü–∏–µ–π –∫–µ—à–∞."""
    return {
        "user_id": user_id,
        "message": "User deleted",
        "cache_invalidated": True,
        "timestamp": time.time(),
    }


@app.get("/stats")
async def get_stats():
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (–Ω–µ –∫–µ—à–∏—Ä—É–µ—Ç—Å—è)."""
    return {
        "total_requests": "dynamic",
        "cache_hits": "dynamic",
        "timestamp": time.time(),
        "note": "This endpoint is not cached",
    }


# –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–æ—É—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è


@app.get("/test/cache-headers")
async def test_cache_headers():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è."""
    from starlette.responses import JSONResponse

    response = JSONResponse(
        {"message": "Response with cache headers", "timestamp": time.time()}
    )

    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
    response.headers["Cache-Control"] = "public, max-age=60"
    response.headers["ETag"] = '"test-etag-123"'

    return response


if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ FastCacheMiddleware Basic Example...")
    print("\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ endpoints:")
    print("   GET /                    - –∫–æ—Ä–Ω–µ–≤–æ–π —Ä–æ—É—Ç (–±–µ–∑ –∫–µ—à–∞)")
    print("   GET /fast               - –∫–æ—Ä–æ—Ç–∫–∏–π –∫–µ—à (30s)")
    print("   GET /slow               - –¥–ª–∏–Ω–Ω—ã–π –∫–µ—à (5m)")
    print("   GET /users/{user_id}    - –∫–∞—Å—Ç–æ–º–Ω—ã–π –∫–ª—é—á –∫–µ—à–∞")
    print("   GET /data/{item_id}     - –¥–ª–∏–Ω–Ω—ã–π –∫–µ—à (5m)")
    print("   POST /users/{user_id}   - –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å –∏–Ω–≤–∞–ª–∏–¥–∞—Ü–∏–µ–π")
    print("   DELETE /users/{user_id} - —É–¥–∞–ª–µ–Ω–∏–µ —Å –∏–Ω–≤–∞–ª–∏–¥–∞—Ü–∏–µ–π")
    print("   GET /stats              - –±–µ–∑ –∫–µ—à–∞")
    print("   GET /test/cache-headers - —Ç–µ—Å—Ç –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤")

    print("\nüîß –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç middleware:")
    print("   1. –ü—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤—Å–µ —Ä–æ—É—Ç—ã")
    print("   2. –ò–∑–≤–ª–µ–∫–∞–µ—Ç CacheConfig/CacheDropConfig –∏–∑ dependencies")
    print("   3. –ü—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –Ω–∞—Ö–æ–¥–∏—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ä–æ—É—Ç")
    print("   4. –ü—Ä–∏–º–µ–Ω—è–µ—Ç –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–≥–ª–∞—Å–Ω–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")

    print("\nüí° –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("   curl http://localhost:8000/fast")
    print("   curl -H 'user-id: 123' http://localhost:8000/users/1")
    print("   curl -X POST http://localhost:8000/users/1 -d '{}'")

    uvicorn.run(app, host="127.0.0.1", port=8000)
